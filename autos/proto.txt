#function:d|doff|r|s|up|jr|jb|jleft|jright|v|p
#drive | dead-reckoning drive | parameters - x, y, speed, target, [time]
#doff | drives in x, y at speed until target ticks and continues until off the balancing stone | parameters - x, y, speed, target
#rot | gyro rotation until it's rotated to r degrees (-180 to 180) | parameters - r, speed
#sdrive | sensor drive until name returns distance | parameters - x, y, xdistance, ydistance, xtype:[short|long|sonar], ytype:[short|long|sonar], offset, speed, prop, time, test:[true|false], remove:[true|false]
#up | lifts the jewel probe | parameters - [none]
#down | lowers the jewel probe | parameters - [none]
#knockr | knock red jewel | parameters - [none]
#knockb | knock blue jewel | parameters - [none]
#jleft | knock left jewel | parameters - [none]
#jright | knock right jewel | parameters - [none]
#getmark | identifies vumark | parameters - [none]
#place | places glyph (ASSUMES V HAS BEEN CALLED) | parameters - [none]
#align | aligns horizontally with the cryptobox | parameters - [none]
#glyph | attempts to grab a glyph | parameters - [none]
#brace | opens the braces | parameters - [none]
#wait | waits for a number of seconds | parameters - sec
#break | breaks the robot in half | parameters - [none]
#ex: function:d x:1 y:.2 speed:.5 target:1000 will drive right and slightly forward at half speed for 1000 encoder ticks
f:jleft